/// <reference types="node" />
import { QueryObject, ResponseObjectProof, RestClientConfig, StatusObject } from "./types";
export interface RestClient {
    config: RestClientConfig;
    getTransaction: (txRID: Buffer, callback: (error: Error, serializedMessage: Buffer) => void) => void;
    postTransaction: (serializedTransaction: Buffer, callback: (error: Error, responseObject: any) => void) => void;
    getConfirmationProof: (txRID: Buffer, callback: (error: Error, responseObjectProof: ResponseObjectProof) => void) => void;
    status: (txRID: Buffer, callback: (error: Error, responseBody: StatusObject) => void) => void;
    query: (queryObject: QueryObject, callback?: (error: Error, messages: any) => void) => Promise<any>;
    waitConfirmation: (txRID: Buffer) => Promise<null | Error>;
    postAndWaitConfirmation: (serializedTransaction: Buffer, txRID: Buffer, validate?: boolean) => Promise<null>;
    getEndpointPool: () => string[];
}
