/// <reference types="node" />
import { RawGtv } from "../gtv/types";
import { QueryObject } from "../restclient/types";
import { GTX } from "./types";
export interface Itransaction {
    [x: string]: any;
    gtx: GTX;
    sign: (privKey: Buffer, pubKey: Buffer) => void;
    getTxRID: () => Buffer;
    getDigestToSign: () => Buffer;
    addSignature: (pubKey: Buffer, signature: Buffer) => void;
    addOperation: (name: string, ...args: RawGtv[]) => void;
    postAndWaitConfirmation(): Promise<null>;
    send: (callback: (error: Error, responseObject: any) => void) => void;
    encode: () => Buffer;
}
export interface GtxClient {
    newTransaction: (signers: Buffer[]) => Itransaction;
    transactionFromRawTransaction: (rawTransaction: Buffer) => Itransaction;
    query: (queryObject: QueryObject, callback?: (error: Error, messages: any) => void) => Promise<any>;
}
